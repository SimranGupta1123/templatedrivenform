{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/enrollment.service.ts","webpack:///./src/app/user.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid mb-5\\\">\\n  <h1>Bootstrap Enrollment Form</h1>\\n  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorMessage\\\">\\n    {{errorMessage}}\\n  </div>  \\n  <form #userForm=\\\"ngForm\\\" *ngIf=\\\"!submitted\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate><!--will avoid browser validation to kick in when submitting a button-->\\n     {{userForm.form.valid}}\\n      <div class=\\\"form-group\\\">\\n        <label>Name</label>\\n        <input type=\\\"text\\\" required #name=\\\"ngModel\\\"  [class.is-invalid]=\\\"name.invalid && name.touched\\\"\\n         class=\\\"form-control\\\" name=\\\"userName\\\" [(ngModel)]=\\\"userModel.name\\\" >\\n         <small class=\\\"text-danger\\\" [class.d-none]=\\\"name.valid || name.untouched\\\">Name is required</small>\\n      </div>\\n     \\n      <div class=\\\"form-group\\\">\\n        <label>Email</label>\\n        <input type=\\\"email\\\" #email=\\\"ngModel\\\" required class=\\\"form-control\\\" [class.is-invalid]=\\\"email.invalid && email.touched\\\" \\n        name=\\\"email\\\" [(ngModel)]=\\\"userModel.email\\\">\\n        <!--<small class=\\\"text-danger\\\" [class.d-none]=\\\"email.valid || email.untouched\\\">Email is required and invalid</small>\\n        <div *ngIf=\\\"email.errors && (email.invalid || email.touched)\\\">\\n          <small class=\\\"text-danger\\\" *ngIf=\\\"email.errors.required\\\">Email  is required</small>\\n          <small class=\\\"text-danger\\\" *ngIf=\\\"email.errors.pattern\\\">Please enter a valid email</small>-->\\n        \\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label>Phone</label>\\n        <input type=\\\"tel\\\" #phone=\\\"ngModel\\\" required pattern=\\\"^\\\\d{10}$\\\" \\n        [class.is-invalid]=\\\"phone.invalid && phone.touched\\\" class=\\\"form-control\\\" name=\\\"phone\\\" [(ngModel)]=\\\"userModel.phone\\\">\\n        <!--<small class=\\\"text-danger\\\" [class.d-none]=\\\"phone.valid || phone.untouched\\\">Phone is required and should be minimum of 10 digits</small>-->\\n        <div *ngIf=\\\"phone.errors && (phone.invalid || phone.touched)\\\">\\n          <small class=\\\"text-danger\\\" *ngIf=\\\"phone.errors.required\\\">Phone number is required</small>\\n          <small class=\\\"text-danger\\\" *ngIf=\\\"phone.errors.pattern\\\">Phone number should be minimum of 10 digits</small>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <select (blur)=\\\"validateTopic(topic.value)\\\" (change)=\\\"validateTopic(topic.value)\\\"  class=\\\"custom-select\\\" #topic=\\\"ngModel\\\" [class.is-invalid]=\\\"topicHasError && topic.touched\\\" name=\\\"topic\\\" [(ngModel)]=\\\"userModel.topic\\\">\\n          <option value=\\\"default\\\">I am intrested in</option>\\n          <option *ngFor=\\\"let topic of topics\\\">{{topic}}</option>\\n        </select>\\n        <small class=\\\"text-danger\\\" [class.d-none]=\\\"!topicHasError || topic.untouched\\\">Please choose a topic</small>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n      <div class=\\\"mb-1\\\">\\n        <label>Time Preference</label>\\n          <div class=\\\"form-check\\\">\\n            <input type=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"timePreference\\\" value=\\\"morning\\\" [(ngModel)]=\\\"userModel.timePreference\\\">\\n            <label class=\\\"form-check-label\\\"> Morning (9AM - 12PM)</label>\\n          </div>\\n          <div class=\\\"form-check\\\">\\n            <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"timePreference\\\" value=\\\"evening\\\" [(ngModel)]=\\\"userModel.timePreference\\\">\\n            <label class=\\\"form-check-label\\\"> Evening (5PM -8PM)</label>\\n          </div>\\n      </div>\\n\\n      <div class=\\\"form-check mb-3\\\">\\n        <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"userModel.subscribe\\\" name=\\\"subscribe\\\" type=\\\"checkbox\\\">\\n        <label class=\\\"form-check-label\\\">Send me promotional offers</label>\\n      </div>\\n    </div>\\n      <button [disabled]=\\\"userForm.form.invalid || topicHasError \\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\" >Submit Form</button>\\n  </form>\\n</div>\"","import { Component } from '@angular/core';\nimport { User } from './user';\nimport { EnrollmentService } from './enrollment.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  topicHasError=true;\n  submitted=false;\n  topics=['Angular','React','Vue'];\n  errorMessage=\"\";\n  constructor(private _enrollmentService:EnrollmentService){}; \n  userModel=new User('simran','simran@gamil.com',1234567890,'default','evening',true);\n  validateTopic(value){\n    if(value==='default')\n    {\n      this.topicHasError=true;\n    }\n    else{\n      this.topicHasError=false;\n    }\n  }\n  onSubmit(){\n    this.submitted=true;\n    this._enrollmentService.enroll(this.userModel).\n    subscribe(data=>console.log('Success',data),\n    error=>this.errorMessage=error.statusText\n    )}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms'; \nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport { User } from './user';\nimport {catchError} from 'rxjs/operators';\nimport {throwError} from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class EnrollmentService {\n  _url ='http://localhost:3000/enroll';\n  constructor(private http:HttpClient) { }\n\n  enroll(user:User){\n    return this.http.post<any>(this._url,user)\n    .pipe(catchError(this.errorHandler))\n  }\n\n  errorHandler(error:HttpErrorResponse){\n    return throwError(error);\n  }\n}\n","export class User {\n    constructor(\n        public name:string,\n        public email:string,\n        public phone:number,\n        public topic:string,\n        public timePreference:string,\n        public subscribe:boolean                   \n    ){}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}